#!/bin/bash
export LC_ALL=C

function check_v4l() {
  local DEVICE="${1}"
  if [ ! -e "${V4L_DEVICE}" ]; then
    echo "ERROR! v4l2loopback device ${V4L_DEVICE} not found"
    echo "Create the device with the following command:"
    echo
    echo "sudo modprobe v4l2loopback device=1 video_nr=44 card_label=\"GoPro\" exclusive_caps=1"
    echo
    exit
  else
    if [ ${VERBOSE} -eq 1 ]; then
      echo "v4l2loopback device ${V4L_DEVICE} found."
    fi
  fi
}

function ffmpeg() {
  local CMD="ffmpeg -threads 1 -i 'udp://'${GOPRO}':8554' -vsync 2 -fflags nobuffer -flags low_delay -probesize 3072 -ar 44100 -vcodec rawvideo -pix_fmt yuv420p -f v4l2 ${V4L_DEVICE}"
  if [ ${VERBOSE} -eq 1 ]; then
    echo "${CMD}"
  else
    local CMD="${CMD} &>/dev/null"
  fi
  bash -c "${CMD}"
}

function webcam_api() {
  local PARAMS="${1}"
  if [ -z "${PARAMS}" ]; then
    echo "ERROR! No webcam api parameters provided."
    exit
  fi  
  local URL="${GOPRO}/gp/gpWebcam/${PARAMS}"
  local CMD="curl -s \"${URL}\""
  if [ ${VERBOSE} -eq 1 ]; then
    echo "${CMD}"
  else
    local CMD="${CMD} &>/dev/null"
  fi
  bash -c "${CMD}"
}

function start() {
  if [ ${VERBOSE} -eq 1 ]; then
    echo "Checking v4l2loopback device"
  fi
  check_v4l

  if [ ${VERBOSE} -eq 1 ]; then
    echo "Starting GoPro webcam"
  fi
  if [ -n "${FOV}" ]; then
     webcam_api "SETTINGS?fov=${FOV}"
  fi
  webcam_api "START?res=${RESOLUTION}"

  if [ ${VERBOSE} -eq 1 ]; then
    echo "Starting ffmpeg"
  fi
  ffmpeg
}

function stop() {
  if [ ${VERBOSE} -eq 1 ]; then
    echo "Stopping GoPro webcam"
  fi
  webcam_api "STOP"
}

function usage() {
  echo
  echo "Usage"
  echo "  ${0}"
  echo
  echo "You can also pass optional parameters"
  echo "  -f, --fov <fov>             : Set the field of view of the GoPro webcam (default = 4) [Wide = 0, Medium = 1, Narrow = 2, SuperView = 3, Linear = 4]."
  echo "  -r, --resolution <res>      : Set the resultion of the GoPro webcam (default = 720)."
  echo "  -v, --verbose               : Make the operation more talkative."
  exit 1
}

# Global variables
readonly INTERFACE=$(ip link | grep -o "enx.*:" | grep -o "enx[0-9a-z]*")
readonly GOPRO=$(ip addr show ${INTERFACE} | grep -o "inet [0-9]*\.[0-9]*\.[0-9]*\.[0-9]*" | grep -o "[0-9]*\.[0-9]*\.[0-9]*\.")51
V4L_DEVICE="/dev/video44"
VERBOSE=0
RESOLUTION="720"
FOV="4"

while [ $# -gt 0 ]; do
  case "${1}" in
    -f|--fov)
      FOV="${2}"
      if [ -z "${FOV}" ]; then
        echo "ERROR! No field of view provided."
        exit 1
      fi
      shift
      shift;;

    -r|--resolution)
      RESOLUTION="${2}"
      if [ -z "${RESOLUTION}" ]; then
        echo "ERROR! No resolution provided."
        exit 1
      fi
      shift
      shift;;
    
    -v|--verbose)
      VERBOSE=1
      shift;;

    *)
      echo "ERROR! \"${1}\" is not a supported parameter."
      usage;;
  esac
done

if [ -z "${GOPRO}" ]; then
  echo "ERROR! GoPro not found."
  exit
fi

echo
echo "Starting GoPro webcam 4 linux"
echo " - GoPro Network Interface: ${INTERFACE}"
echo " - GoPro IP Address: ${RESOLUTION}"
echo " - GoPro Resolution: ${INTERFACE}"
echo " - GoPro Field of View: ${FOV}"
echo 

trap stop SIGINT
start